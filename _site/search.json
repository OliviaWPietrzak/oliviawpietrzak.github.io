[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hello!",
    "section": "",
    "text": "I’m Olivia Pietrzak, an aspiring data sciencist pursuing my master’s degree in Social Data Analytics and Research at the University of Texas at Dallas. I graduated with honors from the economics department at UTD in December 2022, and I currently work as a Data Analyst at Dallas College within the Strategic Research and Analytics department. In this role, I use data to help college leadership identify and dismantle barriers to student success.\nMy research passions converge at the crossroads of economic justice, education, and labor economics. I am excited to contribute to meaningful projects that make a positive impact, I am committed to leveraging data insights to drive positive change in these crucial areas.\nPlease feel free to connect with me on LinkedIn!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Résumé",
    "section": "",
    "text": "Education\nMS, Social Data Analytics and Research, The University of Texas at Dallas\n\nAnticipated Graduation Date: Spring 2025\n\nBA, Economics, The University of Texas at Dallas, December 2022\n\nCum Laude, John Marshall Pre-Law Society\n\nAA, Government, Austin Community College, December 2020\n\nPhi Theta Kappa\n\nExperience\nData Analyst, Dallas College (February 2023 - present)\n\nUtilize SQL, Excel, and R to extract meaningful insights from large data sets.\nCreate visually compelling dashboards using Microsoft Power BI to facilitate data-driven discussions on student success metrics.\nManage and optimize databases, ensuring data integrity and accessibility for departmental research initiatives.\nCollaborate with cross-functional teams, providing analytic support and contributing to strategic initiatives.\nPrioritize and manage multiple projects concurrently, meeting tight deadlines and delivering high-quality results."
  },
  {
    "objectID": "data_visualization_hw_1.html#part-2-new-fall-colors",
    "href": "data_visualization_hw_1.html#part-2-new-fall-colors",
    "title": "Data Visualization Homework 1",
    "section": "Part 2: New Fall Colors",
    "text": "Part 2: New Fall Colors\nBelow are two versions of the Fall exercise. I used a hex code to generate the color change for the first, and I used a keyword to generate the color change for the second.\n\n\n\nFall Colors edited using hex code (#800500).\n\n\n\n\n\nFall Colors edited using keyword (darkorange1)."
  },
  {
    "objectID": "data_visualization_hw_1.html#part-3-chart-critique",
    "href": "data_visualization_hw_1.html#part-3-chart-critique",
    "title": "Data Visualization Homework 1",
    "section": "Part 3: Chart Critique",
    "text": "Part 3: Chart Critique\nThe chart I chose for critique is The Changing Nature of Middle Class Jobs by Gregor Aisch and Robert Gebeloff, published by The New York Times in February 2015. I think that this visualization does a good job of balancing complex data with a streamlined presentation.\n\n\n\nFirst Visualization from The Changing Nature of Middle Class Jobs\n\n\nAn example image is shown above. While the visualization shows 6+ distinct variables (occupation sector, distinct occupations within a sector, 1980’s and 2014 labor market share by number of roles for specific occupations, gender representation in specific occupations for each timeframe, and the change from 1980’s to 2014 labor market shares both by number of roles and gender composition), as a reader, I never felt overwhelmed or overburdened by the visualization.\nI am still trying to get used to the idea of presenting so much information in a single visualization. I think that keeping the occupations grouped by subcategory, and having a gradient scale with no harsh colors, Aisch and Gebeloff are able to effectively convey trends within industries and well as trends for each individual occupation. I like that the legend is centered directly below the introductory text, so you have a clear idea of what role color plays in the visualization, and the axes’ labels are clear (although it took me a moment to notice the scale of the y-axis…perhaps a slightly larger font would have been effective there?). They have several other visualizations within this article; I think that each is excellent in the simplicity of the data displayed.\nI think that developing discernment for this style of visualization will be an ongoing process for me. Typically, the visualizations I create for my work are very simple – I create data visualizations designed to help inform decision-making for a variety of stakeholders with varying levels of data literacy. Because of the broad scope of the visualizations and the varied end-users, I try to limit myself to 4 variables per visualization, and often keep visualizations at 2-3 variables. I find this to be more inclusive of all levels of data literacy, and also provides a type of built in check for me and my team – since we frequently hand projects off to one another, it is easy to see quickly if a count or rate is suspicious when the data is so aggregated."
  },
  {
    "objectID": "data_visualization_hw_1.html",
    "href": "data_visualization_hw_1.html",
    "title": "Data Visualization Homework 1",
    "section": "",
    "text": "I think that the Anscombe reading is a good reminder to be meticulous in your data exploration before attempting analysis or visualization. Anscombe gives 4 example datasets whose summary statistics and logarithmic output looks very similar, but a simple scatterplot shows that the distribution of the data takes very different forms. I think that understanding the distribution is very important, particularly for data visualization; I normally try to incorporate some form of simple data visualization, like Anscombe’s example of a scatterplot, as part of my initial data exploration process."
  },
  {
    "objectID": "data_visualization_hw_1.html#part-1-anscombe-reading",
    "href": "data_visualization_hw_1.html#part-1-anscombe-reading",
    "title": "Data Visualization Homework 1",
    "section": "",
    "text": "I think that the Anscombe reading is a good reminder to be meticulous in your data exploration before attempting analysis or visualization. Anscombe gives 4 example datasets whose summary statistics and logarithmic output looks very similar, but a simple scatterplot shows that the distribution of the data takes very different forms. I think that understanding the distribution is very important, particularly for data visualization; I normally try to incorporate some form of simple data visualization, like Anscombe’s example of a scatterplot, as part of my initial data exploration process."
  },
  {
    "objectID": "class_notes.html",
    "href": "class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "Importance of negative space in visualizations (it can be useful, or it can be very difficult to decode)\nImportance of color in visualizations (again, it can help clarify or it can confuse)\nImportance of first letter in a word for fast identification of the word (goggle image example)\nIncreased complexity in visualization = end-users spend additional attention on cognitive processing.\n\n\nFor image above: Remember that these processes are siloed and that progress from one area to the next does not mean that your message will be decipherable to your end user.\nAside: Eye contact makes for a good presentation according to Dr. Ho. Eye contact = data collection.\nNominalist approach/symbolic approach to data visualization\nUnderstand the context of your audience; be mindful of your design choices (e.g., cultural sensitivity to particular colors, color-blindness, etc).\n\n\n1.       Collection and storage of data\n2.       Data transformation and preprocessing\n3.       Mapping data to a visualization\n4.       Human perception of visualization.\n\n\n\nSemiotics = study of symbols and how they convey meaning\nWorst case scenario: there is an increase in cognitive load without increase in information conveyed. Use semiotics to reduce this.\nComplexity = the connection between many different things and how they interact/influence each other\nSimplicity = the connection between a few things and how they interact/influence each other\nComplexity and simplicity are relative to the user – they are not static characteristics\n              Users gain more skill, technology grows\n              Things don’t always grow at the same rate; keep in mind what growth you anticipate\n              Their relationship depends on a lot of things (e.g., peoples’ willingness to learn)\n\n\n\nImportant data elements should be represented by graphical elements that are visually more distinct than those representing less important information.\n              Color: not good for lots of categories\n              Different Shapes: better for lots of categories, may run out\n              Characters/Names: best for lots of categories\nGreater numerical values should be represented by more distinct graphical elements.\nGraphical symbol systems should be standardized within and across applications.\nChoose the most efficient tool for a task.\n\nWould you use Illustrator or Excel to generate a basic bar chart?\n\nOnly go for novelty when the anticipated payoff is greater than the cost. Otherwise stick with the tried and true.\nEffort spent needs to be proportional to the payoff/profits.\n\nAsk yourself: Is this worth the effort?\n\nPerception can be learned.\n\n\n\nUser, Designer, and Scientist\n\nEach role has different skill-set and role within the visualization process\n\nElements of the graphic\nAngular data encoding is not effective – try not to use pie charts.\n\nOnly when you have a clear majority or plurality"
  },
  {
    "objectID": "class_notes.html#lecture-4-cognitive-science-in-data-visualization",
    "href": "class_notes.html#lecture-4-cognitive-science-in-data-visualization",
    "title": "Class Notes",
    "section": "",
    "text": "Importance of negative space in visualizations (it can be useful, or it can be very difficult to decode)\nImportance of color in visualizations (again, it can help clarify or it can confuse)\nImportance of first letter in a word for fast identification of the word (goggle image example)\nIncreased complexity in visualization = end-users spend additional attention on cognitive processing.\n\n\nFor image above: Remember that these processes are siloed and that progress from one area to the next does not mean that your message will be decipherable to your end user.\nAside: Eye contact makes for a good presentation according to Dr. Ho. Eye contact = data collection.\nNominalist approach/symbolic approach to data visualization\nUnderstand the context of your audience; be mindful of your design choices (e.g., cultural sensitivity to particular colors, color-blindness, etc).\n\n\n1.       Collection and storage of data\n2.       Data transformation and preprocessing\n3.       Mapping data to a visualization\n4.       Human perception of visualization.\n\n\n\nSemiotics = study of symbols and how they convey meaning\nWorst case scenario: there is an increase in cognitive load without increase in information conveyed. Use semiotics to reduce this.\nComplexity = the connection between many different things and how they interact/influence each other\nSimplicity = the connection between a few things and how they interact/influence each other\nComplexity and simplicity are relative to the user – they are not static characteristics\n              Users gain more skill, technology grows\n              Things don’t always grow at the same rate; keep in mind what growth you anticipate\n              Their relationship depends on a lot of things (e.g., peoples’ willingness to learn)\n\n\n\nImportant data elements should be represented by graphical elements that are visually more distinct than those representing less important information.\n              Color: not good for lots of categories\n              Different Shapes: better for lots of categories, may run out\n              Characters/Names: best for lots of categories\nGreater numerical values should be represented by more distinct graphical elements.\nGraphical symbol systems should be standardized within and across applications.\nChoose the most efficient tool for a task.\n\nWould you use Illustrator or Excel to generate a basic bar chart?\n\nOnly go for novelty when the anticipated payoff is greater than the cost. Otherwise stick with the tried and true.\nEffort spent needs to be proportional to the payoff/profits.\n\nAsk yourself: Is this worth the effort?\n\nPerception can be learned.\n\n\n\nUser, Designer, and Scientist\n\nEach role has different skill-set and role within the visualization process\n\nElements of the graphic\nAngular data encoding is not effective – try not to use pie charts.\n\nOnly when you have a clear majority or plurality"
  },
  {
    "objectID": "data_visualization_hw_2.html",
    "href": "data_visualization_hw_2.html",
    "title": "Data Visualization Homework 2",
    "section": "",
    "text": "Question 1\nYou can change the pch in the plot command. Pch stands for plot character, and there are over 250 options (1-25 are standard vector and R symbols). You can also change the color and size of the pch points using the col, bg, and cex commands (see below).\nThe numbers in front of the graph title change the location of the graph title within the box. The command will not display text outside of the graph box.\n\n\nShow code\nplot(pressure, pch = 5)  # Can you change pch?\n\n\n\n\n\n\n\n\n\nShow code\nplot(pressure, pch = 25, bg = \"pink\", col = \"blue\", cex = 3)\n\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n\n\n\n\n\n\n\n\nQuestion 2\n\n\nShow code\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")"
  },
  {
    "objectID": "data_visualization_hw_3.html",
    "href": "data_visualization_hw_3.html",
    "title": "Homework 3",
    "section": "",
    "text": "Use to explore relationships between 2 variables (e.g., correlation, distributions, etc).\n\n# Scatterplot\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16) #x is the travel times\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8) #y1 is the responses per seecond\ny2 &lt;- c(4, .8, .5, .45, .4, .3) #y2 is the responses per travel\n\n#https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/\npar(\n      las = 1, #las - label styles (0 = always parallel, 1 = always horizontal, 2 = always perpendicular, 3 = always vertical )\n      mar = c(5,5,2,5), #controls the margins on each side of the display box. 1 = , 2 = , 3 = , 4 =\n      mgp = c(5, 1, 0), #controls labels in the margins. 1st value = axis title distance, 2nd value = tick mark distance, 3rd value = axis\n      cex = .5 #controls the size of the points \n    ) \nplot.new()\nplot.window(\n              range(x) #controls the possible values on the x-axis. this sets it equal to the x values\n              , c(0,6) #controls the possible values on the y-axis. \n            )  \npar(\n  #col=\"blue\", #controls plot color (points and lines) -- this command didn't work when I tried to graph                 the lines and points below. I had to call out the color for each element.\n  fg=\"grey25\", #this changes the colors of the the axes and labels\n  col.axis=\"black\" #this changes the color of the tick labels\n   )\nlines(x, y1, col = \"lightblue\")\nlines(x, y2, col = \"pink\")\npoints(x, y1, pch=16, cex=2, col = \"blue\") #pch changes the display mark, and cex changes the size of the display mark.\npoints(x, y2, pch=21, col = \"red\", bg=\"white\", cex=2) #bg changes the background color in the filled icons.\n\n#https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/Axis\naxis(\n      1, #this is the axis you are working with 1 = bottom, 2 = left, 3 = top, 4 = right\n      at=seq( #tells where to put the tick marks\n              0, #starting point\n              16, #ending point\n              4 #intervals\n             ),\n      cex.axis = 1.5,\n      family =\"serif\"\n    )\naxis(2, at=seq(0, 6, 2), cex.axis = 1.5, family = \"serif\")\naxis(4, at=seq(0, 6, 2),cex.axis = 1.5, family = \"serif\")\n\nbox(bty=\"u\") #draws a box around the graph \n              # bty=\"o\" - Open box (all 4 sides) - this is the default\n              # bty=\"l\" - L shape (left and bottom only)\n              # bty=\"7\" - Looks like a 7 (top and right only)\n              # bty=\"c\" - C shape (top, left, bottom - no right)\n              # bty=\"u\" - U shape (left, bottom, right - no top)\n              # bty=\"]\" - Right bracket (top, right, bottom - no left)\n              # bty=\"n\" - None (no box at all)\n\n#https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/mtext\nmtext(\n      \"Travel Time(s)\", #text\n      side= 1, #what side you're labeling. 1 = bottom, 2 = left, 3 = top, 4 = right\n      line=3, #where to place it in the margin\n      las = 1, #rotation of the label. See above.\n      cex= 1, #size of text\n      family= \"serif\"\n      )\nmtext(\"Responses per Travel\", side=2, line=3, las=0, cex=1, family = \"serif\")\nmtext(\"Responses per Second\", side=4, line=3, las=0, cex=1, family = \"serif\")\nrect(3, 2.25, 5, 2.75, col = \"lightgrey\", border = \"grey\")\ntext(4, 2.5, \"Bird 131\", cex=2, family = \"serif\")\n\n\n\n\n\n\n\n\n\n\n\n\nBar Plot\nBox Plot\nPerspective Plot\nPie Chart"
  },
  {
    "objectID": "data_visualization_hw_3.html#question-1",
    "href": "data_visualization_hw_3.html#question-1",
    "title": "Homework 3",
    "section": "",
    "text": "Use to explore relationships between 2 variables (e.g., correlation, distributions, etc).\n\n# Scatterplot\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16) #x is the travel times\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8) #y1 is the responses per seecond\ny2 &lt;- c(4, .8, .5, .45, .4, .3) #y2 is the responses per travel\n\n#https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/\npar(\n      las = 1, #las - label styles (0 = always parallel, 1 = always horizontal, 2 = always perpendicular, 3 = always vertical )\n      mar = c(5,5,2,5), #controls the margins on each side of the display box. 1 = , 2 = , 3 = , 4 =\n      mgp = c(5, 1, 0), #controls labels in the margins. 1st value = axis title distance, 2nd value = tick mark distance, 3rd value = axis\n      cex = .5 #controls the size of the points \n    ) \nplot.new()\nplot.window(\n              range(x) #controls the possible values on the x-axis. this sets it equal to the x values\n              , c(0,6) #controls the possible values on the y-axis. \n            )  \npar(\n  #col=\"blue\", #controls plot color (points and lines) -- this command didn't work when I tried to graph                 the lines and points below. I had to call out the color for each element.\n  fg=\"grey25\", #this changes the colors of the the axes and labels\n  col.axis=\"black\" #this changes the color of the tick labels\n   )\nlines(x, y1, col = \"lightblue\")\nlines(x, y2, col = \"pink\")\npoints(x, y1, pch=16, cex=2, col = \"blue\") #pch changes the display mark, and cex changes the size of the display mark.\npoints(x, y2, pch=21, col = \"red\", bg=\"white\", cex=2) #bg changes the background color in the filled icons.\n\n#https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/Axis\naxis(\n      1, #this is the axis you are working with 1 = bottom, 2 = left, 3 = top, 4 = right\n      at=seq( #tells where to put the tick marks\n              0, #starting point\n              16, #ending point\n              4 #intervals\n             ),\n      cex.axis = 1.5,\n      family =\"serif\"\n    )\naxis(2, at=seq(0, 6, 2), cex.axis = 1.5, family = \"serif\")\naxis(4, at=seq(0, 6, 2),cex.axis = 1.5, family = \"serif\")\n\nbox(bty=\"u\") #draws a box around the graph \n              # bty=\"o\" - Open box (all 4 sides) - this is the default\n              # bty=\"l\" - L shape (left and bottom only)\n              # bty=\"7\" - Looks like a 7 (top and right only)\n              # bty=\"c\" - C shape (top, left, bottom - no right)\n              # bty=\"u\" - U shape (left, bottom, right - no top)\n              # bty=\"]\" - Right bracket (top, right, bottom - no left)\n              # bty=\"n\" - None (no box at all)\n\n#https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/mtext\nmtext(\n      \"Travel Time(s)\", #text\n      side= 1, #what side you're labeling. 1 = bottom, 2 = left, 3 = top, 4 = right\n      line=3, #where to place it in the margin\n      las = 1, #rotation of the label. See above.\n      cex= 1, #size of text\n      family= \"serif\"\n      )\nmtext(\"Responses per Travel\", side=2, line=3, las=0, cex=1, family = \"serif\")\nmtext(\"Responses per Second\", side=4, line=3, las=0, cex=1, family = \"serif\")\nrect(3, 2.25, 5, 2.75, col = \"lightgrey\", border = \"grey\")\ntext(4, 2.5, \"Bird 131\", cex=2, family = \"serif\")\n\n\n\n\n\n\n\n\n\n\n\n\nBar Plot\nBox Plot\nPerspective Plot\nPie Chart"
  },
  {
    "objectID": "data_visualization_hw_3.html#question-3",
    "href": "data_visualization_hw_3.html#question-3",
    "title": "Homework 3",
    "section": "Question 3",
    "text": "Question 3\n\nUse different font (e.g., serif)\nWhen using base R, you can call different families of typeface. So if you wanted to do serif, you’d say family = “serif”. Other packages use different processes – this article explains well.\n\n\nNon-default colors\nYou can use a hex-code to select any color you’d like. When you specify col, use double quotes and then paste the hex code in the quotes (keep the hashtag).\n\ncol = \"#afe984\"\ncol = \"#624f6d\"\n\n\n\nUse different plotting characters"
  },
  {
    "objectID": "data_visualization_hw_3.html#question-4",
    "href": "data_visualization_hw_3.html#question-4",
    "title": "Homework 3",
    "section": "Question 4",
    "text": "Question 4\n\nUse different font (ggplot2)\ngeomtext has the command family that lets you switch the font.\n\n\nNon-default colors (ggplot2)\nYou can use a hexcode for this as well (see Q3 above).\n\n\nNon-default symbols (ggplot2)\nscale_shape_manual()…? Need to do more research/testing."
  },
  {
    "objectID": "data_visualization_hw_3.html#question-5",
    "href": "data_visualization_hw_3.html#question-5",
    "title": "Homework 3",
    "section": "Question 5",
    "text": "Question 5\n\n#############################\n# Step 0: Download the data.#\n#############################\n# \n# ## Download COVID data from OWID GitHub\n owidall = read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n# #Deselect cases/rows with OWID\n owidall = owidall[!grepl(\"^OWID\", owidall$iso_code), ]\n# # Subset by continent: Europe\n owideu = subset(owidall, continent==\"Europe\")\n\n#############################################################\n# Step 1: Transform the date data and get the subset needed.#\n#############################################################\n\n#Change the data type to date.\nowideu$date = as.Date(owideu$date)\nowideu_country_test = subset(owideu, location %in% c(\"Germany\", \"Italy\", \"Ukraine\", \"Spain\")) #this is not right, but using all of the coutnries yields a graph that doesn;t have the right shape at all...since these are specifically mentioned, I only kept them.\nowideu_date_subset = subset(owideu_country_test, date &gt;= as.Date(\"2020-01-01\") & date &lt;= as.Date(\"2023-08-31\"))\n\n#Relabel the variables to use for easier coding\nx = (owideu_date_subset$date)\ny = (owideu_date_subset$new_deaths)\n\n###################################\n# Step 2: Start the visualization.#\n###################################\n#Run this if you need to reset the visualizations(start over completely).\n#?dev.off\n#dev.off()\n\n#Create the plot and the axes.\nplot.new()\n\nplot.window(\n              range( as.Date(\"2019-11-01\"),as.Date(\"2023-09-01\")), # controls the possible values on the x-axis\n              c(0, 6500) # there's a bit above the 6000 value.\n           )  \n\npar(\n      fg = \"black\", #black axes and tickmarks\n      col.axis = \"black\" #black tickmark labels\n    )\n\n#Putting the points on the graph\npoints(x, y, pch = 20, cex = 0.8, col = \"#e72b8a\")\n\n#These are the months displayed on the graph provided by Dr. Ho.\nmonths_for_labels = as.Date(c(\n                                \"2020-01-01\", \"2020-02-01\", \"2020-04-01\", \"2020-06-01\", \"2020-08-01\", \"2020-10-01\", \"2020-11-01\",\n                                \"2021-01-01\", \"2021-03-01\", \"2021-05-01\", \"2021-07-01\", \"2021-08-01\", \"2021-10-01\", \"2021-12-01\",\n                                \"2022-04-01\", \"2022-06-01\", \"2022-07-01\", \"2022-09-01\", \"2022-11-01\",\n                                \"2023-01-01\", \"2023-03-01\", \"2023-04-01\", \"2023-06-01\", \"2023-08-01\"\n                              )\n                            )\n\n#Now that the tickmark labels have been made and transformed to date, I'll add them to the x-axis.\naxis(\n  1,\n  at = as.numeric(months_for_labels), #leave this as numeric\n  labels = format(months_for_labels, \"%Y-%m\"), #this will format the label as YYYY-MM\n  cex.axis = .8,\n  family = \"serif\",\n  las = 2,\n  tick = FALSE\n)\n\n#y axis with tick marks\naxis(\n  2, \n  at = seq(0, 6000, 1000)\n  , cex.axis = 1\n  , family = \"serif\",\n  tick = TRUE\n  )\n\n#box around the entire graph\nbox(bty = \"o\")\n\n#labelled points\n text(as.numeric(as.Date(\"2020-06-01\")), 6000, \"Spain\", cex = .8, family = \"serif\")\n text(as.numeric(as.Date(\"2020-06-01\")), 4750, \"Spain\", cex = .8, family = \"serif\")\n text(as.numeric(as.Date(\"2021-03-01\")), 6400, \"Germany\", cex = .8, family = \"serif\")\n text(as.numeric(as.Date(\"2022-01-01\")), 4750, \"Ukraine\", cex = .8, family = \"serif\") \n text(as.numeric(as.Date(\"2023-04-01\")), 1250, \"Germany\", cex = .8, family = \"serif\")\n text(as.numeric(as.Date(\"2023-09-01\")), 250, \"Italy\", cex = .8, family = \"serif\")"
  },
  {
    "objectID": "data_visualization_hw_5.html#question-2---ggplot2-visualizations",
    "href": "data_visualization_hw_5.html#question-2---ggplot2-visualizations",
    "title": "Data Visualization Homework 5",
    "section": "Question 2 - ggplot2 Visualizations",
    "text": "Question 2 - ggplot2 Visualizations\n\nCode\n\n\nShow Code\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(janitor)\ndf &lt;- read_xlsx(\"2024-25 NBA Player Stats.xlsx\", sheet = \"Averages\")\nplayers &lt;- clean_names(\n                        df[df$Player %in% c('Luka Dončić', \n                                             'Nikola Jokić', \n                                             'Shai Gilgeous-Alexander',\n                                             'Giannis Antetokounmpo',\n                                             'Joel Embiid',\n                                             'Jayson Tatum',\n                                             'Lebron James',\n                                             'Kevin Durant',\n                                             'Stephen Curry',\n                                             'Anthony Edwards',\n                                             'Jimmy Butler',\n                                             'Kawhi Leonard',\n                                             'Myles Turner',\n                                             'Jalen Brunson',\n                                             'Victor Wembanyama',\n                                             'Anthony Davis'\n                                             ), \n                           ]\n                      )\nplayers &lt;- players %&gt;%\n                      mutate(across(where(is.numeric), ~ floor(. * 10) / 10))\n\neast_teams &lt;- c(\"BOS\", \"PHI\", \"NYK\", \"BKN\", \"TOR\", \"MIL\", \"CLE\", \"IND\", \n                \"CHI\", \"ATL\", \"MIA\", \"ORL\", \"WAS\", \"CHA\", \"DET\")\nplayers &lt;- players %&gt;%\n                        mutate(conference = case_when(team %in% east_teams ~ \"Eastern\",\n                                                      TRUE ~ \"Western\"\n                                                      )\n                               )\nplayers &lt;- players %&gt;%\n                      mutate(conference_cd = case_when(conference == \"Eastern\" ~ \"1\",\n                                                        TRUE ~ \"2\"\n                                                      )\n                            )\n##########################################################################################################\n##GGPLOT2\n##########################################################################################################\ninstall.packages(\"extrafont\")\nlibrary(extrafont)\n#font_import()\n#loadfonts()\n#fonts()[grep(\"Trebuchet MS\", fonts())]\n\nbrand_colors &lt;- c(\n  primary = \"#0F62FE\",      \n  secondary = \"#8A3FFC\",    \n  accent1 = \"#33B1FF\",      \n  accent2 = \"#002D9C\",      \n  neutral = \"#525252\",      \n  background1 = \"#F4F4F4\",    \n  background2 = \"#D4B8FE\",\n  background3 = \"#C4DBFF\"\n)\n\n###########\n#Histogram#\n###########\nggplot(data = players, aes(age)) + \n  geom_histogram(\n                 binwidth = 2, \n                 linewidth = 0.75,\n                 col = brand_colors[\"neutral\"],     \n                 fill = brand_colors[\"background3\"]) +\n            labs(\n                 title = \"NBA Player Age Distribution\",\n                 x = \"Age\",\n                 y = \"Frequency\") +\n    theme_minimal(\n                  base_family = \"Trebuchet MS\") +\n            theme(\n                  panel.grid = element_blank(), \n                  panel.border = element_rect(color = brand_colors[\"neutral\"], fill = NA, linewidth = .75),\n                  plot.title = element_text(hjust = 0.5, family = \"Trebuchet MS\", size = 16),\n                  axis.text = element_text(family = \"Trebuchet MS\", color = brand_colors[\"neutral\"], size = 10))\n\n###################\n#Verical Bar Chart#\n###################\n#Gradient\nggplot(data = players, aes(x = reorder(player, age), y = age, fill = age)) +\n        geom_col(\n                  col = brand_colors[\"neutral\"],\n                  linewidth = .75) +\n  scale_fill_gradient(low = brand_colors[[\"background3\"]], high = brand_colors[[\"primary\"]])+\n      geom_text(aes(label = age), \n                vjust = -0.5,                    \n                size = 3,                       \n                family = \"Trebuchet MS\")+\n          ylim (0, 40) +\n            labs(\n                  title = \"NBA Player Age\",\n                  x = \"NBA Player\",\n                  y = \"Age\") +\n    theme_minimal(\n                  base_family = \"Trebuchet MS\") +\n            theme(\n                  panel.grid = element_blank(), \n                  panel.border = element_rect(color = brand_colors[\"neutral\"], fill = NA, linewidth = .75),\n                  plot.title = element_text(hjust = 0.5, family = \"Trebuchet MS\", size = 16),\n                  axis.text = element_text(angle = 90, family = \"Trebuchet MS\", color = brand_colors[\"neutral\"], size = 10),\n                  legend.position = \"none\")\n\n#Single Color\nggplot(data = players, aes(x = reorder(player, age), y = age)) +\n  geom_col(\n    col = brand_colors[\"neutral\"],\n    fill = brand_colors[\"background3\"],\n    linewidth = .75) +\n  geom_text(aes(label = age), \n            vjust = -0.5,                    \n            size = 3,                       \n            family = \"Trebuchet MS\")+\n  ylim (0, 40) +\n  labs(\n    title = \"NBA Player Age\",\n    x = \"NBA Player\",\n    y = \"Age\") +\n  theme_minimal(\n    base_family = \"Trebuchet MS\") +\n  theme(\n    panel.grid = element_blank(), \n    panel.border = element_rect(color = brand_colors[\"neutral\"], fill = NA, linewidth = .75),\n    plot.title = element_text(hjust = 0.5, family = \"Trebuchet MS\", size = 16),\n    axis.text = element_text(angle = 90, family = \"Trebuchet MS\", color = brand_colors[\"neutral\"], size = 10),\n    legend.position = \"none\")\n\n######################\n#Horizontal Bar Chart#\n######################\n#Gradient\nggplot(data = players, aes(x = minutes_per_game, y = reorder(player, -minutes_per_game))) +\n    geom_col(aes(fill = minutes_per_game),\n             col = brand_colors[\"neutral\"],\n             linewidth = .75) +\n      scale_fill_gradient(low = \"#D4B8FE\", high = \"#8A3FFC\")+\n  xlim (0, 40)+\n  geom_text(aes(label = minutes_per_game), \n            hjust = -0.2,\n            size = 3,                       \n            family = \"Trebuchet MS\")+\n      labs(\n        title = \"Average Minutes Per Game by NBA Player\",\n        x = \"Average Minutes Per Game\",\n        y = \"NBA Player\") +\n      theme_minimal(\n        base_family = \"Trebuchet MS\") +\n      theme(\n        panel.grid = element_blank(), \n        panel.border = element_rect(color = brand_colors[\"neutral\"], fill = NA, linewidth = .75),\n        plot.title = element_text(hjust = 0.5, family = \"Trebuchet MS\", size = 16),\n        axis.text = element_text(family = \"Trebuchet MS\", color = brand_colors[\"neutral\"], size = 10),\n        legend.position = \"none\")\n\n#Single Color\nggplot(data = players, aes(x = minutes_per_game, y = reorder(player, -minutes_per_game))) +\n  geom_col(fill = brand_colors[\"background3\"],\n           col = brand_colors[\"neutral\"],\n           linewidth = .75) +\n  xlim (0, 40)+\n  geom_text(aes(label = minutes_per_game), \n            hjust = -0.2,\n            size = 3,                       \n            family = \"Trebuchet MS\")+\n  labs(\n    title = \"Average Minutes Per Game by NBA Player\",\n    x = \"Average Minutes Per Game\",\n    y = \"NBA Player\") +\n  theme_minimal(\n    base_family = \"Trebuchet MS\") +\n  theme(\n    panel.grid = element_blank(), \n    panel.border = element_rect(color = brand_colors[\"neutral\"], fill = NA, linewidth = .75),\n    plot.title = element_text(hjust = 0.5, family = \"Trebuchet MS\", size = 16),\n    axis.text = element_text(family = \"Trebuchet MS\", color = brand_colors[\"neutral\"], size = 10),\n    legend.position = \"none\")\n############\n# Pie Chart#\n############\nconf_data &lt;- players %&gt;%\n                        count(conference)\nprint(conf_data$conference)\nggplot(conf_data, aes(x = \"\", y = n, fill = conference)) +\n  geom_col(color = \"white\", linewidth = .7) +\n  geom_text(aes(label = n),\n            position = position_stack(vjust = 0.5),\n            size = 5,\n            family = \"Trebuchet MS\",\n            color = \"white\",\n            fontface = \"plain\") +\n  coord_polar(\"y\", start = 0) +\n  scale_fill_manual(values = c(\"Eastern\" = brand_colors[[\"primary\"]], \n                               \"Western\" = brand_colors[[\"secondary\"]])) +\n  labs(title = \"NBA Players by Conference\",\n       fill = \"Conference\") +\n  theme_void(base_family = \"Trebuchet MS\") +\n  theme(\n        plot.title = element_text(hjust = 0.5, size = 16)\n        )\n\n###########\n# Box Plot#\n###########\n#Team Colors\nggplot(data = df_boxplot, aes(x = team, y = points_per_game, fill = team)) +\n  geom_boxplot(color = brand_colors[[\"neutral\"]],\n               linewidth = 0.8) +\n  scale_fill_manual(values = team_colors_vibrant) + \n  labs(title = \"Average Points Per Game Distribution by NBA Team\",\n       x = \"NBA Team\",\n       y = \"Average Points Per Game\") +\n  theme_minimal(base_family = \"Trebuchet MS\") +\n  theme(panel.grid = element_blank(),\n        panel.border = element_rect(color = brand_colors[[\"neutral\"]], \n                                    fill = NA, \n                                    linewidth = 0.75),\n        plot.title = element_text(hjust = 0.5, size = 16),\n        axis.title = element_text(face = \"plain\"),\n        axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 9),\n        axis.text = element_text(color = brand_colors[[\"neutral\"]]),\n        legend.position = \"none\")\n\n#Single Color\nggplot(data = df_boxplot, aes(x = team, y = points_per_game)) +  # Added closing )\n  geom_boxplot(color = brand_colors[[\"neutral\"]],\n               fill = brand_colors[[\"background3\"]],\n               linewidth = 0.8) +\n  labs(title = \"Average Points Per Game Distribution by NBA Team\",\n       x = \"NBA Team\",\n       y = \"Average Points Per Game\") +\n  theme_minimal(base_family = \"Trebuchet MS\") +\n  theme(panel.grid = element_blank(),\n        panel.border = element_rect(color = brand_colors[[\"neutral\"]], \n                                    fill = NA, \n                                    linewidth = 0.75),\n        plot.title = element_text(hjust = 0.5, size = 16),\n        axis.title = element_text(face = \"plain\"),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 9),  # Added angle = 90\n        axis.text = element_text(color = brand_colors[[\"neutral\"]])\n        )\n  \n##############\n# Scatterplot#\n##############\nnba_scatterplot &lt;- ggplot(data = players, aes(x = minutes_per_game, y = points_per_game, color = player)) +\n  geom_point(size = 4) + \n  scale_color_manual(values = player_colors_vibrant) + \n  geom_text(aes(label = player),\n            hjust = -0.1,\n            vjust = 0.5,\n            size = 3,\n            family = \"Trebuchet MS\") +\n  labs(title = \"Average Minutes Per Game by Average Points Per Game\",\n       x = \"Average Minutes Per Game\",\n       y = \"Average Points Per Game\") +\n  xlim (30, 38)+\n  theme_minimal(base_family = \"Trebuchet MS\") +\n  theme(panel.grid = element_blank(),\n        panel.border = element_rect(color = brand_colors[[\"neutral\"]], \n                                    fill = NA, \n                                    linewidth = 0.75),\n        plot.title = element_text(hjust = 0.5, size = 16),\n        axis.title = element_text(face = \"plain\"),\n        legend.position = \"none\")\n\n\n\n\nVisualizations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion 3 - Export Options\nYou can use ggsave with the file option you’d like.\nExample: ggsave(“nba_scatterplot.jpeg”, plot = nba_scatterplot, width = 8, height = 6, dpi = 300).\nYou can also select “Export” from the Plot viewing window."
  },
  {
    "objectID": "data_visualization_hw_5.html#question-3---export-options",
    "href": "data_visualization_hw_5.html#question-3---export-options",
    "title": "Data Visualization Homework 5",
    "section": "Question 3 - Export Options",
    "text": "Question 3 - Export Options\nYou can use ggsave with the file option you’d like.\nExample: ggsave(“nba_scatterplot.jpeg”, plot = nba_scatterplot, width = 8, height = 6, dpi = 300)."
  },
  {
    "objectID": "data_visualization_hw_5.html",
    "href": "data_visualization_hw_5.html",
    "title": "Data Visualization Homework 5",
    "section": "",
    "text": "The dataset used in this assignment was sourced here: https://github.com/benc0x/NBA-Data-Analysis-2024-2025"
  },
  {
    "objectID": "data_visualization_hw_5.html#question-1---base-r-visualizations",
    "href": "data_visualization_hw_5.html#question-1---base-r-visualizations",
    "title": "Data Visualization Homework 5",
    "section": "Question 1 - Base R Visualizations",
    "text": "Question 1 - Base R Visualizations\n\nCode\n\n\nShow Code\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(janitor)\ndf &lt;- read_xlsx(\"2024-25 NBA Player Stats.xlsx\", sheet = \"Averages\")\nplayers &lt;- clean_names(\n                        df[df$Player %in% c('Luka Dončić', \n                                             'Nikola Jokić', \n                                             'Shai Gilgeous-Alexander',\n                                             'Giannis Antetokounmpo',\n                                             'Joel Embiid',\n                                             'Jayson Tatum',\n                                             'Lebron James',\n                                             'Kevin Durant',\n                                             'Stephen Curry',\n                                             'Anthony Edwards',\n                                             'Jimmy Butler',\n                                             'Kawhi Leonard',\n                                             'Myles Turner',\n                                             'Jalen Brunson',\n                                             'Victor Wembanyama',\n                                             'Anthony Davis'\n                                             ), \n                           ]\n                      )\nplayers &lt;- players %&gt;%\n                      mutate(across(where(is.numeric), ~ floor(. * 10) / 10))\n\neast_teams &lt;- c(\"BOS\", \"PHI\", \"NYK\", \"BKN\", \"TOR\", \"MIL\", \"CLE\", \"IND\", \n                \"CHI\", \"ATL\", \"MIA\", \"ORL\", \"WAS\", \"CHA\", \"DET\")\nplayers &lt;- players %&gt;%\n                        mutate(conference = case_when(team %in% east_teams ~ \"Eastern\",\n                                                      TRUE ~ \"Western\"\n                                                      )\n                               )\nplayers &lt;- players %&gt;%\n                      mutate(conference_cd = case_when(conference == \"Eastern\" ~ \"1\",\n                                                        TRUE ~ \"2\"\n                                                      )\n                            )\n\n###########\n#Histogram#\n###########\nhist(players$age, \n    col = \"lightblue\", \n     main = paste(\"Histogram of NBA Player Age\"),\n     xlab = \"Age\",\n     ylab = \"Frequency\",\n     ylim = c(0, 8),\n     labels = TRUE)\nhist(players$minutes_per_game,\n     col = \"lightgreen\", \n     main = paste(\"Histogram of NBA Players' Average Minutes Played Per Game\"),\n     xlab = \"Average Minutes Played\",\n     ylab = \"Frequency\",\n     ylim = c(0, 5),\n     labels = TRUE)\nhist(players$points_per_game,\n     col = \"lightpink\",\n     main = paste(\"Histogram of NBA Players' Average Points Per Game\"),\n     xlab = \"Average Points Per Game\",\n     ylab = \"Frequency\",\n     ylim = c(0, 7),\n     labels = TRUE\n     )\n\n###################\n#Verical Bar Chart#\n###################\n?barplot\npar(mar = c(8, 4, 4, 2))\nbp_age &lt;- barplot(players$age,\n                  names.arg = players$player,\n                  horiz = FALSE,\n                  col = \"lightblue\",\n                  main = \"NBA Players' Age\",\n                  cex.names = 0.5,\n                  las = 2,\n                  ylab = \"Age\",\n                  ylim = c(0, 45)\n                  )\ntext(x = bp_age,         \n     y = players$age,           \n     labels = players$age,       \n     pos = 3,                     \n     cex = 0.8) \nmtext(\"NBA Player\", side = 1, line = 6)\n\n######################\n#Horizontal Bar Chart#\n######################\npar(mar = c(4, 8, 4, 2))\nbp_mpg &lt;- barplot(players$minutes_per_game,\n                  names.arg = players$player,\n                  horiz = TRUE,\n                  col = \"lightgreen\",\n                  main = \"NBA Players' Average Minutes Per Game\",\n                  cex.names = 0.5,\n                  las = 1,\n                  xlab = \"Average Minutes Per Game\",\n                  xlim = c(0, 45)\n)\ntext(x = players$minutes_per_game+2,         \n     y = bp_mpg,           \n     labels = players$minutes_per_game,       \n     cex = 0.8) \nmtext(\"NBA Player\", side = 2, line = 6)\n\n############\n# Pie Chart#\n############\n?pie\nconference_counts &lt;- table(players$conference)\npar(mar = c(2, 2, 4, 2))\npie(conference_counts,\n    main = \"NBA Player Count by Conference\",\n    col = c(\"lightpink\",\"lightblue\"),\n    labels = paste(names(conference_counts), \"  (\", conference_counts, \")\")\n)\n\n###########\n# Box Plot#\n###########\n?boxplot\ndf_boxplot &lt;- clean_names(df[df$Team %in% players$team, ] )\nteam_colors_vibrant &lt;- c(\n  \"BOS\" = \"#008348\",    # Celtics Green\n  \"DAL\" = \"#0053BC\",    # Mavs Blue\n  \"DEN\" = \"#8B2131\",    # Nuggets Gold\n  \"GSW\" = \"#FFC72C\",    # Warriors Gold\n  \"IND\" = \"#002D62\",    # Pacers Gold\n  \"LAC\" = \"#C8102E\",    # Clippers Red\n  \"LAL\" = \"#552583\",    # Lakers Gold\n  \"MIL\" = \"#00471B\",    # Bucks Green\n  \"MIN\" = \"#78BE20\",    # Timberwolves Green\n  \"NYK\" = \"#F58426\",    # Knicks Orange\n  \"OKC\" = \"#EF3B24\",    # Thunder Orange\n  \"PHI\" = \"#ED174C\",    # 76ers Red\n  \"PHO\" = \"#1d1160\",    # Suns Purple\n  \"SAS\" = \"#C4CED4\"     # Spurs Black\n)\npar(mar = c(4, 4, 2, 2))\nboxplot(df_boxplot$points_per_game~df_boxplot$team,\n        cex.axis = 0.5,\n        col = team_colors_vibrant,\n        xlab = \"NBA Team\",\n        ylab = \"Average Points Per Game Per Player\",\n        main = \"Distribution of Average Points Per Game by NBA Team\"\n        )\n\n##############\n# Scatterplot#\n##############\n?plot\nplayer_colors_vibrant &lt;- c(\n  'Luka Dončić'= \"#552583\", \n  'Nikola Jokić'= \"#8B2131\", \n  'Shai Gilgeous-Alexander' = \"#EF3B24\",\n  'Giannis Antetokounmpo'= \"#00471B\",\n  'Joel Embiid' = \"#ED174C\",\n  'Jayson Tatum' = \"#008348\",\n  'Lebron James'= \"#552583\",\n  'Kevin Durant' = \"#1d1160\",\n  'Stephen Curry'= \"#FFC72C\",\n  'Anthony Edwards'= \"#78BE20\",\n  'Jimmy Butler'= \"#FFC72C\",\n  'Kawhi Leonard'= \"#C8102E\",\n  'Myles Turner'= \"#002D62\",\n  'Jalen Brunson'= \"#F58426\",\n  'Victor Wembanyama' = \"#C4CED4\",\n  'Anthony Davis'= \"#0053BC\"\n)\nsp_mppg &lt;- plot(players$minutes_per_game, players$points_per_game,\n                pch = 16,\n                cex = 2,\n                xlab = \"Average Minutes Played Per Game\",\n                xlim = c(30, 38),\n                ylab = \"Average Points Scored Per Game\",\n                ylim = c(17, 33),\n                col = player_colors_vibrant[players$player],\n                main = \"Average Points Per Game By Average Minutes Per Game\"\n                )\ntext(x = players$minutes_per_game+0.5,         \n     y = players$points_per_game,           \n     labels = players$player,       \n     cex = 0.5) \n\n\n\n\nVisualizations"
  }
]